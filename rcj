#include <iostream>
#include <vector>
#include <string>

using namespace std;

// Define a structure for Train
struct Train {
    int id;
    string name;
    int capacity;
};

// Define a structure for Route
struct Route {
    int id;
    string origin;
    string destination;
    int distance;
};

// Define a structure for Allocation
struct Allocation {
    Train train;
    Route route;
    string date;
};

// Function to print train details
void printTrainDetails(const Train &train) {
    cout << "Train ID: " << train.id << ", Name: " << train.name << ", Capacity: " << train.capacity << endl;
}

// Function to print route details
void printRouteDetails(const Route &route) {
    cout << "Route ID: " << route.id << ", Origin: " << route.origin << ", Destination: " << route.destination << ", Distance: " << route.distance << " km" << endl;
}

// Function to print allocation details
void printAllocationDetails(const Allocation &allocation) {
    cout << "Train: " << allocation.train.name << ", Route: " << allocation.route.origin << " to " << allocation.route.destination << ", Date: " << allocation.date << endl;
}

int main() {
    // List of trains
    vector<Train> trains = {
        {1, "Express", 300},
        {2, "Local", 150},
        {3, "Superfast", 500}
    };

    // List of routes
    vector<Route> routes = {
        {1, "CityA", "CityB", 200},
        {2, "CityC", "CityD", 400},
        {3, "CityE", "CityF", 600}
    };

    // List of allocations
    vector<Allocation> allocations;

    // Allocating trains to routes
    allocations.push_back({trains[0], routes[1], "2024-08-01"});
    allocations.push_back({trains[1], routes[2], "2024-08-02"});
    allocations.push_back({trains[2], routes[0], "2024-08-03"});

    // Print all train details
    cout << "Train Details:" << endl;
    for (const auto &train : trains) {
        printTrainDetails(train);
    }

    // Print all route details
    cout << "\nRoute Details:" << endl;
    for (const auto &route : routes) {
        printRouteDetails(route);
    }

    // Print all allocation details
    cout << "\nAllocations:" << endl;
    for (const auto &allocation : allocations) {
        printAllocationDetails(allocation);
    }

    return 0;
} 
